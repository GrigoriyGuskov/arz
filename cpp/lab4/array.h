#pragma once

void inputv(double x[], int n);
void inputv(int x[], int n);
void outputv(double x[], int n);
void outputv(int x[], int n);
double suma(double x[], int n);
double suma_after(double x[], int n, int i);
double positive_suma(double x[], int n);
double negative_suma(double x[], int n);
void poiskmax(double x[], int n, double& max, int& k);
void poiskmax_abs(double x[], int n, double& max, int& k);
void poiskmin(double x[], int n, double& min, int& k);
void poiskmin_abs(double x[], int n, double& min, int& k);
int poisk_prelast_zero(double x[], int n);
int poisk_index(double x[], int n, double t);
int poisk_index_avg(double x[], int n);
double poisk_mult_max(double x[], int n);
int poisk_first_neg(double x[], int n);
int poisk_first_pos(double x[], int n);
int poisk_first_zero(double x[], int n);
int poisk_first_even(int x[], int n);
int poisk_first_odd(int x[], int n);
double mult_between(double x[], int k, int m);
double mult_between_min_max(double x[], int n);
void strange_sort(double x[], int n);
void udal(double x[], int& n, int k);
void add(double x[], int& n, int k, double t);
int number_of_positive(double x[], int n);
int number_of_negative(double x[], int n);
int number_of_zeros(double x[], int n);
void delete_positive(double x[], int& n);
void delete_negative(double x[], int& n);
int delete_first_neg_pair(double x[], int& n);
bool is_two_zeros_in_row(double x[], int n);
int indexes_of_max(double x[], int b[], int n);
void sortm_up(double x[], int n);
void sortm_down(double x[], int n);
void bubble_sort_up(double x[], int n);
void bubble_sort_down(double x[], int n);
void insert_up(double x[], int& n, double k);
void insert_sort_up(double x[], int n);
void insert_down(double x[], int& n, double k);
void insert_sort_down(double x[], int n);
void sortm_up(int x[], int n);
void sortm_down(int x[], int n);
void bubble_sort_up(int x[], int n);
void bubble_sort_down(int x[], int n);
void insert_up(int x[], int& n, int k);
void insert_sort_up(int x[], int n);
void insert_down(int x[], int& n, int k);
void insert_sort_down(int x[], int n);
int copy_odd_even_ind(int x[], int n, int y[]);
int copy_even_even_ind(int x[], int n, int y[]);
int copy_odd_odd_ind(int x[], int n, int y[]);
int copy_even_odd_ind(int x[], int n, int y[]);
void sdvig(double x[], int n, int m);
